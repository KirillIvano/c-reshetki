@page "/solution"

@using BlazorApp1.Data;
@inject CarService carService;

<h1>Решение</h1>

<div class="row">
    <div class="col-xs-12 col-md-4">
        <label>
            Модель

            <input type="text"
                   class="form-control"
                   value="@this.modelSearch"
                   @onchange="@this.handleModelChange" />
        </label>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-md-4">
        <label>
            Цвет

            <input type="text"
                   name="color"
                   class="form-control"
                   value="@this.colorSearch"
                   @onchange="@this.handleColorChange" />

        </label>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-md-4">
        <button type="button" class="btn btn-primary" @onclick="@this.updateCars">Найти</button>
    </div>
</div>


@if (cars == null)
{
    <p>Loading....</p>
}
else
{
    <table class="table mt-5">
        <thead>
            <tr>
                <th>id</th>
                <th>Модель</th>
                <th>Цвет</th>
                <th>Имя водителя</th>
                <th>Адрес водителя</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
            <tr>
                <td>@car.Id</td>
                <td>@car.Model</td>
                <td>@car.Color</td>
                <td>@car.DriverName</td>
                <td>@car.DriverAddress</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private string modelSearch = "";
    private string colorSearch = "";

    private List<Data.dto.CarFullInfoDto> cars;

    protected override async Task OnInitializedAsync()
    {
        await this.updateCars();
    }

    private async Task updateCars()
    {
        this.cars = await carService.GetCarsFullInfo(this.modelSearch, this.colorSearch);
    }

    private void handleColorChange(ChangeEventArgs e)
    {
        this.colorSearch = e.Value.ToString();
    }

    private void handleModelChange(ChangeEventArgs e)
    {
        this.modelSearch = e.Value.ToString();
    }
}
