@page "/toy/update/{Id:int}"

@using BlazorApp1.Data;
@inject ToyService toyService;
@inject NavigationManager navigationManager;

<h1>Решение</h1>

<div class="row">
    <div class="col-xs-12 col-md-4">
        <label>
            Название

            <input type="text"
                   name="name"
                   value="@name"
                   @onchange="@handleNameChange"
                   class="form-control" />
        </label>
    </div>
</div>

<div class="row">
    <div class="col-xs-12 col-md-4">
        <label>
            Цена

            <input type="number"
                   name="price"
                   value="@price"
                   @onchange="@handlePriceChange"
                   class="form-control" />
        </label>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-md-4">
        <label>
            Возраст

            <input type="number"
                   name="age"
                   value="@age"
                   @onchange="@handleAgeChange"
                   class="form-control" />
        </label>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-md-4">
        <button class="btn btn-primary" @onclick="@this.handleSubmit">Изменить</button>
    </div>
</div>



@code {
    [Parameter]
    public int Id { get; set; }


    private List<Data.dto.ToyDto> toys;
    int age = 0;
    int price = 0;
    string name = "";
    string error = "";

    protected override async Task OnInitializedAsync()
    {
        var toy = await toyService.GetToyById(Id);

        this.age = toy.Age;
        this.name = toy.Name;
        this.price = toy.Price;
    }


    private void handleAgeChange(ChangeEventArgs e)
    {
        this.age = Convert.ToInt32(e.Value);
    }

    private void handleNameChange(ChangeEventArgs e)
    {
        this.name = e.Value.ToString();
    }

    private void handlePriceChange(ChangeEventArgs e)
    {
        this.price = Convert.ToInt32(e.Value);
    }


    private async Task handleSubmit()
    {
        this.error = "";

        if (this.name == "")
        {
            this.error = "имя не может быть пустым";
        }

        try
        {
            await toyService.UpdateToy(new Data.dto.UpdateToyDto() {
                Id = Id,
                Name = name,
                Age = age,
                Price = price
            });
            navigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            this.error = e.Message;
        }
    }
}
